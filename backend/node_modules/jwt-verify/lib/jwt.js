var http = require('http');
var header = require('./header');
var errors = require('restify-errors');

module.exports = function (req, res, next) {
	var auth = req.header('Authorization')
	if (!auth) {
		next(new errors.UnauthorizedError(`Missing Authorization header`))
	}
	if (!process.env.JWT_VERIFY_HOST) {
		next(new Error('Environment variable JWT_VERIFY_HOST not set'));
	}
	if (!process.env.JWT_VERIFY_PORT) {
		next(new Error('Environment variable JWT_VERIFY_PORT not set'));
	}
	header.extract(req, 'Authorization', function (err, jwtToken) {
		if (err) {
			next(err);
		}
		var body = JSON.stringify({
			token: jwtToken
		});
		var request = new http.ClientRequest({
			hostname: process.env.JWT_VERIFY_HOST,
			port: process.env.JWT_VERIFY_PORT,
			path: "/jwt/verify",
			method: "POST",
			headers: {
				"Content-Type": "application/json",
				"Content-Length": Buffer.byteLength(body)
			}
		});
		request.on('response', function (res) {
			if (res.statusCode == 400) {
				return next(null, false);
			}
			next(null, true);
		});
		request.on('aborted', function () {
			next(new Error('Connection has been aborted: ' + arguments));
		});
		request.end(body);
	});
}
